Мой Flutter-проект для iOS на CI (GitHub Actions) валится на этапе pod install с такой ошибкой в логах (фрагмент):

text
/opt/homebrew/lib/ruby/gems/3.3.0/gems/cocoapods-1.16.2/lib/cocoapods/command/install.rb:52:in `run'
...(длинный stack trace Ruby)
Process completed with exit code 1.
В логах нет конкретного сообщения про несовместимость pod'ов — только длинный Ruby-стек в момент post_install.

Вопросы:

Какие типовые причины такой ошибки на стадии post_install?

Как проверить, что именно не так с моим Podfile или секцией post_install (например, неправильный синтаксис, конфликтная строка, неправильный плагин)?

Как временно упростить Podfile до самого минимального рабочего содержания, чтобы отловить ошибку (например, только с flutter_additional_ios_build_settings)?

Есть ли практики отладки столь “глубоких” Ruby-стектрейсов на GitHub Actions, чтобы понять причину сбоя?

Какие шаги по очистке Pods, кэшей, .symlinks и Podfile.lock рекомендуются при подобных ошибках на CI?

Опиши best practice/чек-лист для диагностики и минимизации дефектов post_install на CI без Mac (когда вся сборка только на Actions).

Этот промт даст Gemini максимум контекста и приведет к конкретным, практически применимым шагам для диагностики и исправления причины сбоя на этапе pod install/post_install.Вот готовый промт для Gemini:

При сборке Flutter-проекта для iOS на CI в GitHub Actions возникает ошибка при выполнении pod install:

text
/opt/homebrew/lib/ruby/gems/3.3.0/gems/cocoapods-1.16.2/lib/cocoapods/command/install.rb:52:in `run'
... (длинный stack trace Ruby)
Process completed with exit code 1.
В логах нет явного сообщения о несовместимости pod или о минимальном deployment target — только длинный Ruby traceback, судя по всему на этапе post_install.

Вопросы:

Что чаще всего вызывает такие Ruby-ошибки на этапе pod install/post_install в Flutter-проектах?

Как выглядит минимально рабочий блок post_install для Flutter, чтобы протестировать Podfile на ошибки?

Как быстро диагностировать, в каком месте Podfile происходит сбой и какой плагин или строка вызывает ошибку? Стоит ли запускать pod install --verbose?

Какие есть рекомендации по очищению кэшей, Pods, Podfile.lock, .symlinks при подобных ошибках, если весь процесс контролируется только через GitHub Actions?

Какие шаги предпринять по ускоренной изоляции проблемы и как минимизировать влияние кастомных post_install в будущем?

Дай, пожалуйста, пошаговую инструкцию для Windows/CI (без Mac), чтобы отловить и устранить такие ошибки..