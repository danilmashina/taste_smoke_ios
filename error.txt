Задача Настрой iOS-платформу Flutter-приложения так, чтобы она использовала тот же Firebase-проект, что и Android. Не создавать новый Firebase-проект. Работать в Windows PowerShell. Проект находится в каталоге:

C:\testsmoke\TasteSmokeTest1\taste_smoke_ios
Входные данные

Firebase Project ID: tastesmoketest
iOS Bundle ID: com.example.tastesmokeios
GoogleService-Info.plist уже добавлен в taste_smoke_ios\ios\Runner\GoogleService-Info.plist
Нужны команды и проверки для Windows PowerShell
Требования

Если Flutter НЕ установлен корректно, установить его как git-клон и прописать временный PATH для текущей сессии.
Активировать FlutterFire CLI и убедиться, что flutterfire виден в PATH.
В каталоге taste_smoke_ios выполнить flutter pub get и flutterfire configure, указав проект и bundle id.
Убедиться, что сгенерирован lib/firebase_options.dart, а в lib/main.dart выполнена инициализация Firebase.
Ничего не ломать в Android-конфигурации; конфигурация должна быть общей.
Вывести понятный отчёт о проделанных шагах и результатах.
Действия (выполняй по порядку, с проверками)

Шаг 0. Открой PowerShell и используй следующие команды и проверки

Все команды выполняй и показывай вывод. Если шаг уже выполнен/успешен — пропускай.
Шаг 1. Проверка/установка Flutter (через git-клон)

Если flutter --version возвращает ошибку “not a clone”, то:
Создай папку C:\src, если её нет:
New-Item -ItemType Directory -Force C:\src | Out-Null
Клонируй стабильную ветку Flutter в C:\src\flutter:
git clone -b stable https://github.com/flutter/flutter.git C:\src\flutter
Добавь во временный PATH (на текущую сессию):
$env:Path += ";C:\src\flutter\bin;C:\src\flutter\bin\cache\dart-sdk\bin;$env:USERPROFILE\AppData\Local\Pub\Cache\bin"
Проверь:
where flutter
where dart
flutter --version
dart --version
Шаг 2. Активировать FlutterFire CLI (и убедиться, что команда доступна)

Выполни:
flutter pub global activate flutterfire_cli
Убедись, что Pub Cache/bin в PATH (на всякий случай ещё раз):
$env:Path += ";$env:USERPROFILE\AppData\Local\Pub\Cache\bin"
Проверь:
flutterfire --version
Если не находится, вызови напрямую:
& "$env:USERPROFILE\AppData\Local\Pub\Cache\bin\flutterfire.bat" --version
Шаг 3. Установить зависимости проекта

Перейди в каталог проекта:
Set-Location C:\testsmoke\TasteSmokeTest1\taste_smoke_ios
Выполни:
flutter pub get
Шаг 4. Прописать конфигурацию FlutterFire для существующего проекта

Выполни:
flutterfire configure --project tastesmoketest --platforms=ios,android --ios-bundle-id com.example.tastesmokeios
Ожидаемые результаты:
Сгенерирован файл lib\firebase_options.dart
iOS продолжает использовать ios\Runner\GoogleService-Info.plist (он уже на месте и соответствует Bundle ID и Project ID)
Шаг 5. Проверить инициализацию Firebase в коде

Открой taste_smoke_ios\lib\main.dart.
Если нет инициализации — добавь до runApp:
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';
WidgetsFlutterBinding.ensureInitialized();
await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
Минимальный пример:

dart
import 'package:flutter/widgets.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) => const Placeholder();
}
Шаг 6. Проверка результата

Убедись, что существуют:
C:\testsmoke\TasteSmokeTest1\taste_smoke_ios\lib\firebase_options.dart
C:\testsmoke\TasteSmokeTest1\taste_smoke_ios\ios\Runner\GoogleService-Info.plist
Выполни пробную сборку (можно без кода-сайнинга; на Windows iOS-артефакт не соберётся, но команда flutter pub get и конфигурация не должны выдавать ошибок).
Выведи итоговый отчёт:
Версии flutter/dart
Версия flutterfire
Подтверждение генерации lib/firebase_options.dart
Подтверждение корректного пути к GoogleService-Info.plist
Что именно изменено/добавлено в main.dart (если менялось)
Важно

Не создавать новый Firebase-проект; использовать tastesmoketest.
Bundle ID строго com.example.tastesmokeios.
Ничего не ломать в Android-конфигурации.
Если встречаются ошибки PATH — поправляй PATH в рамках текущей сессии, как указано выше.
В отчёт добавь конкретные пути/файлы, которые проверил.
Вывести в конце

Краткий чек-лист “Готово/Не готово” по пунктам:
Flutter установлен (clone OK)
Flutter/Dart в PATH
FlutterFire CLI активен
lib/firebase_options.dart создан
GoogleService-Info.plist на месте и подключён
Инициализация Firebase в main.dart есть