name: Flutter iOS Build for AltStore

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'
          cache: true

      - name: Flutter Doctor
        run: flutter doctor -v

      - name: Clean project thoroughly
        run: |
          echo "üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
          flutter clean
          rm -rf build
          rm -rf ios/Pods 
          rm -rf ios/Podfile.lock
          rm -rf ios/.symlinks
          rm -rf ios/Flutter/Flutter.framework
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          
      - name: Get Flutter dependencies
        run: |
          echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Flutter –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          flutter pub get

      - name: Analyze Flutter code
        run: |
          echo "üîç –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞..."
          flutter analyze --no-fatal-infos || echo "‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ –∫–æ–¥–µ, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è —Å–±–æ—Ä–∫–∏"

      - name: Setup CocoaPods
        run: |
          echo "üçé –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CocoaPods..."
          cd ios
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é CocoaPods
          echo "–í–µ—Ä—Å–∏—è CocoaPods: $(pod --version)"
          
          # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π CocoaPods
          echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è CocoaPods..."
          pod repo update
          
          # –ü—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å –æ—Å–Ω–æ–≤–Ω—ã–º Podfile
          echo "–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º Podfile..."
          if pod install --repo-update --verbose --clean-install; then
            echo "‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π Podfile —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
          else
            echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º Podfile, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π..."
            
            # –ë—ç–∫–∞–ø –æ—Å–Ω–æ–≤–Ω–æ–≥–æ Podfile
            cp Podfile Podfile.backup
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Podfile
            cp Podfile.minimal Podfile
            
            # –û—á–∏—â–∞–µ–º –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
            rm -rf Pods Podfile.lock
            
            echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º Podfile..."
            if pod install --repo-update --verbose --clean-install; then
              echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Podfile —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            else
              echo "‚ùå –û—à–∏–±–∫–∞ –¥–∞–∂–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º Podfile"
              exit 1
            fi
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö pods:"
          ls -la Pods/ | head -10

      - name: Check dependencies status
        run: |
          echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
          flutter pub outdated || true
          cd ios && pod outdated || true
          
      - name: Verify iOS project structure
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã iOS –ø—Ä–æ–µ–∫—Ç–∞..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:"
          ls -la ios/Runner.xcodeproj/project.pbxproj && echo "‚úÖ project.pbxproj –Ω–∞–π–¥–µ–Ω" || echo "‚ùå project.pbxproj –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          ls -la ios/Runner/Info.plist && echo "‚úÖ Info.plist –Ω–∞–π–¥–µ–Ω" || echo "‚ùå Info.plist –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          ls -la ios/Pods/ && echo "‚úÖ Pods —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" || echo "‚ùå Pods –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
          if [ -f "ios/Runner/GoogleService-Info.plist" ]; then
            echo "‚úÖ GoogleService-Info.plist –Ω–∞–π–¥–µ–Ω"
          else
            echo "‚ö†Ô∏è GoogleService-Info.plist –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ –∫–æ—Ä–Ω—è..."
            if [ -f "google-service-info.json" ]; then
              cp google-service-info.json ios/Runner/GoogleService-Info.plist
              echo "‚úÖ GoogleService-Info.plist —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
            else
              echo "‚ùå –§–∞–π–ª Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
            fi
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º Flutter –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Flutter –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
          ls -la ios/Flutter/Generated.xcconfig && echo "‚úÖ Generated.xcconfig –Ω–∞–π–¥–µ–Ω" || echo "‚ùå Generated.xcconfig –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º workspace
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ workspace:"
          ls -la ios/Runner.xcworkspace/ && echo "‚úÖ Workspace –Ω–∞–π–¥–µ–Ω" || echo "‚ùå Workspace –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

      - name: Build iOS IPA (unsigned for AltStore)
        run: |
          echo "üî® –°–±–æ—Ä–∫–∞ IPA –¥–ª—è AltStore..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –≥–æ—Ç–æ–≤–æ –∫ —Å–±–æ—Ä–∫–µ
          if [ ! -d "ios/Pods" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: CocoaPods –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            exit 1
          fi
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–¥ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è unsigned —Å–±–æ—Ä–∫–∏
          echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è unsigned —Å–±–æ—Ä–∫–∏..."
          
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π xcconfig —Ñ–∞–π–ª –¥–ª—è unsigned —Å–±–æ—Ä–∫–∏
          cat > ios/Flutter/Unsigned.xcconfig << 'EOF'
          #include "Generated.xcconfig"
          CODE_SIGN_IDENTITY=
          CODE_SIGNING_REQUIRED=NO
          CODE_SIGNING_ALLOWED=NO
          PROVISIONING_PROFILE_SPECIFIER=
          DEVELOPMENT_TEAM=
          ENABLE_BITCODE=NO
          SKIP_INSTALL=NO
          EOF
          
          # –û–±–Ω–æ–≤–ª—è–µ–º Release.xcconfig –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è unsigned –Ω–∞—Å—Ç—Ä–æ–µ–∫
          cp ios/Flutter/Release.xcconfig ios/Flutter/Release.xcconfig.backup
          cp ios/Flutter/Unsigned.xcconfig ios/Flutter/Release.xcconfig
          
          echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π..."
          echo "Generated.xcconfig —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
          cat ios/Flutter/Generated.xcconfig || echo "Generated.xcconfig –Ω–µ –Ω–∞–π–¥–µ–Ω"
          echo "Release.xcconfig —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:"
          cat ios/Flutter/Release.xcconfig
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ —Å–±–æ—Ä–∫–∏
          echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ —Å–±–æ—Ä–∫–∏:"
          ls -la build/ 2>/dev/null || echo "–ü–∞–ø–∫–∞ build –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
          echo "üöÄ –ó–∞–ø—É—Å–∫ flutter build ipa —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          export FLUTTER_LOGS_DIR="$PWD/flutter_logs"
          mkdir -p "$FLUTTER_LOGS_DIR"
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞
          set -o pipefail
          if flutter build ipa --release --no-codesign --verbose 2>&1 | tee "$FLUTTER_LOGS_DIR/flutter_build_ipa.log"; then
            echo "‚úÖ –ö–æ–º–∞–Ω–¥–∞ flutter build ipa –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º 0"
            
            # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            echo "üîç –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–±–æ—Ä–∫–∏..."
            echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ build/ –ø–æ—Å–ª–µ flutter build ipa:"
            find build/ -type f -name "*.ipa" -o -name "*.app" -o -name "*.xcarchive" 2>/dev/null || echo "–ù–µ—Ç –∞—Ä—Ö–∏–≤–æ–≤ –∏–ª–∏ IPA —Ñ–∞–π–ª–æ–≤"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ IPA
            echo "–ü–æ–∏—Å–∫ IPA —Ñ–∞–π–ª–æ–≤ –≤–æ –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏—è—Ö:"
            find . -name "*.ipa" -type f 2>/dev/null || echo "IPA —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏–≥–¥–µ"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ IPA –≤ –æ–∂–∏–¥–∞–µ–º–æ–º –º–µ—Å—Ç–µ
            if [ -f "build/ios/ipa/Runner.ipa" ] || [ -f "build/ios/ipa/taste_smoke_ios.ipa" ] || ls build/ios/ipa/*.ipa 1> /dev/null 2>&1; then
              echo "‚úÖ IPA —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω –≤ build/ios/ipa/"
            else
              echo "‚ö†Ô∏è IPA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–∂–∏–¥–∞–µ–º–æ–º –º–µ—Å—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏..."
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏–≤—ã Xcode
              echo "–ü–æ–∏—Å–∫ xcarchive —Ñ–∞–π–ª–æ–≤:"
              find build/ -name "*.xcarchive" -type d 2>/dev/null || echo "xcarchive –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ app bundle
              echo "–ü–æ–∏—Å–∫ app bundle:"
              find build/ -name "*.app" -type d 2>/dev/null || echo "app bundle –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
              
              echo "‚ùå flutter build ipa –Ω–µ —Å–æ–∑–¥–∞–ª IPA —Ñ–∞–π–ª, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–º—É –º–µ—Ç–æ–¥—É"
              BUILD_IPA_SUCCESS=false
            fi
          else
            echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ flutter build ipa –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π"
            BUILD_IPA_SUCCESS=false
          fi
          
          # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥, –µ—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
          if [ "$BUILD_IPA_SUCCESS" = "false" ]; then
            echo "üîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏..."
            
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
            cp ios/Flutter/Release.xcconfig.backup ios/Flutter/Release.xcconfig
            
            # –ü—Ä–æ–±—É–µ–º —Å–±–æ—Ä–∫—É iOS app bundle
            echo "üì± –°–±–æ—Ä–∫–∞ iOS app bundle..."
            if flutter build ios --release --no-codesign --verbose 2>&1 | tee "$FLUTTER_LOGS_DIR/flutter_build_ios.log"; then
              echo "‚úÖ –°–±–æ—Ä–∫–∞ iOS app –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
              
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ build/ios/iphoneos –ø–æ—Å–ª–µ flutter build ios:"
              ls -la build/ios/iphoneos/ 2>/dev/null || echo "build/ios/iphoneos –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
              
              # –°–æ–∑–¥–∞–µ–º IPA –≤—Ä—É—á–Ω—É—é –∏–∑ app bundle
              echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ IPA –∏–∑ app bundle..."
              mkdir -p build/ios/ipa
              
              if [ -d "build/ios/iphoneos" ]; then
                cd build/ios/iphoneos
                
                # –ù–∞—Ö–æ–¥–∏–º .app —Ñ–∞–π–ª
                APP_NAME=$(find . -name "*.app" -type d | head -1)
                if [ -n "$APP_NAME" ]; then
                  echo "‚úÖ –ù–∞–π–¥–µ–Ω app bundle: $APP_NAME"
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ app bundle
                  echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ app bundle:"
                  ls -la "$APP_NAME"
                  
                  # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è IPA
                  mkdir -p Payload
                  cp -r "$APP_NAME" Payload/
                  
                  # –°–æ–∑–¥–∞–µ–º IPA —Ñ–∞–π–ª
                  IPA_NAME="taste_smoke_ios.ipa"
                  if zip -r "../ipa/$IPA_NAME" Payload/; then
                    echo "‚úÖ IPA —Å–æ–∑–¥–∞–Ω –≤—Ä—É—á–Ω—É—é: ../ipa/$IPA_NAME"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π IPA
                    cd ../ipa
                    echo "–†–∞–∑–º–µ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ IPA: $(du -h "$IPA_NAME" | cut -f1)"
                    echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ IPA:"
                    unzip -l "$IPA_NAME" | head -10
                    cd ../../..
                  else
                    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞"
                    cd ../../..
                    exit 1
                  fi
                else
                  echo "‚ùå App bundle –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ build/ios/iphoneos"
                  ls -la build/ios/iphoneos/
                  cd ../../..
                  exit 1
                fi
              else
                echo "‚ùå –ü–∞–ø–∫–∞ build/ios/iphoneos –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
                exit 1
              fi
            else
              echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ iOS app"
              echo "–°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
              exit 1
            fi
          fi
          
          # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          echo "üéØ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ IPA..."
          if [ -d "build/ios/ipa" ] && ls build/ios/ipa/*.ipa 1> /dev/null 2>&1; then
            echo "‚úÖ IPA —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!"
            for ipa in build/ios/ipa/*.ipa; do
              echo "üì± IPA: $ipa"
              echo "   –†–∞–∑–º–µ—Ä: $(du -h "$ipa" | cut -f1)"
              echo "   –¢–∏–ø —Ñ–∞–π–ª–∞: $(file "$ipa")"
            done
          else
            echo "‚ùå IPA —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ –º–µ—Ç–æ–¥–æ–≤"
            echo "–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
            find build/ -type f 2>/dev/null | head -20
            exit 1
          fi
          
      - name: Verify IPA creation and validate
        run: |
          echo "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è IPA..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
          echo "=== –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ build/ ==="
          find build/ -type f 2>/dev/null | sort || echo "–ü–∞–ø–∫–∞ build –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
          
          echo ""
          echo "=== –ü–æ–∏—Å–∫ –≤—Å–µ—Ö IPA —Ñ–∞–π–ª–æ–≤ ==="
          find . -name "*.ipa" -type f 2>/dev/null || echo "IPA —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∏–≥–¥–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ"
          
          echo ""
          echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ build/ios/ipa ==="
          if [ -d "build/ios/ipa" ]; then
            echo "‚úÖ –ü–∞–ø–∫–∞ build/ios/ipa —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            ls -la build/ios/ipa/
            
            if ls build/ios/ipa/*.ipa 1> /dev/null 2>&1; then
              echo ""
              echo "‚úÖ IPA —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã! –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:"
              
              for ipa in build/ios/ipa/*.ipa; do
                echo ""
                echo "üì± –ê–Ω–∞–ª–∏–∑ IPA: $ipa"
                echo "   üìè –†–∞–∑–º–µ—Ä: $(du -h "$ipa" | cut -f1)"
                echo "   üîç –¢–∏–ø —Ñ–∞–π–ª–∞: $(file "$ipa")"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ ZIP –∞—Ä—Ö–∏–≤
                if file "$ipa" | grep -q "Zip archive"; then
                  echo "   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ZIP –∞—Ä—Ö–∏–≤"
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ IPA
                  echo "   üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ IPA (–ø–µ—Ä–≤—ã–µ 15 —Ñ–∞–π–ª–æ–≤):"
                  unzip -l "$ipa" | head -20 | tail -15
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                  echo "   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:"
                  
                  if unzip -l "$ipa" | grep -q "Payload/.*\.app/"; then
                    echo "   ‚úÖ App bundle –Ω–∞–π–¥–µ–Ω –≤ Payload/"
                  else
                    echo "   ‚ùå App bundle –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Payload/"
                  fi
                  
                  if unzip -l "$ipa" | grep -q "Payload/.*\.app/Info.plist"; then
                    echo "   ‚úÖ Info.plist –Ω–∞–π–¥–µ–Ω"
                  else
                    echo "   ‚ùå Info.plist –Ω–µ –Ω–∞–π–¥–µ–Ω"
                  fi
                  
                  if unzip -l "$ipa" | grep -q "Payload/.*\.app/.*"; then
                    APP_BUNDLE=$(unzip -l "$ipa" | grep "Payload/.*\.app/" | head -1 | awk '{print $4}' | cut -d'/' -f2)
                    echo "   üì± –ò–º—è app bundle: $APP_BUNDLE"
                  fi
                  
                  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 1MB –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                  SIZE_BYTES=$(stat -f%z "$ipa" 2>/dev/null || stat -c%s "$ipa" 2>/dev/null || echo "0")
                  SIZE_MB=$((SIZE_BYTES / 1024 / 1024))
                  
                  if [ "$SIZE_MB" -gt 1 ]; then
                    echo "   ‚úÖ –†–∞–∑–º–µ—Ä IPA –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: ${SIZE_MB}MB"
                  else
                    echo "   ‚ö†Ô∏è IPA —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π: ${SIZE_MB}MB (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–ø–æ–ª–Ω—ã–π)"
                  fi
                  
                else
                  echo "   ‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ZIP –∞—Ä—Ö–∏–≤–æ–º"
                  echo "   üîç –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ (–ø–µ—Ä–≤—ã–µ 100 –±–∞–π—Ç):"
                  hexdump -C "$ipa" | head -5
                fi
              done
              
              echo ""
              echo "üéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
              
            else
              echo "‚ùå IPA —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ build/ios/ipa"
              echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏:"
              ls -la build/ios/ipa/ || echo "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏"
              exit 1
            fi
          else
            echo "‚ùå –ü–∞–ø–∫–∞ build/ios/ipa –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            echo ""
            echo "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è IPA ==="
            echo "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
            echo "1. flutter build ipa –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ"
            echo "2. –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–¥–ø–∏—Å–∏ –∫–æ–¥–∞"
            echo "3. –û—à–∏–±–∫–∏ –≤ Info.plist –∏–ª–∏ bundle identifier"
            echo "4. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
            echo ""
            echo "–ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ build/:"
            find build/ -type f 2>/dev/null | head -30 || echo "–ü–∞–ø–∫–∞ build –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            exit 1
          fi

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: taste-smoke-ios-altstore
          path: build/ios/ipa/*.ipa
          retention-days: 30

      - name: Debug build failure
        if: failure()
        run: |
          echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ —Å–±–æ—Ä–∫–∏..."
          
          echo "=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ ==="
          ls -la ios/
          
          echo "=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ build ==="
          find build/ -type f 2>/dev/null || echo "–ü–∞–ø–∫–∞ build –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
          
          echo "=== Xcode –ø—Ä–æ–µ–∫—Ç ==="
          ls -la ios/Runner.xcodeproj/
          ls -la ios/Runner.xcworkspace/ 2>/dev/null || echo "Workspace –Ω–µ –Ω–∞–π–¥–µ–Ω"
          
          echo "=== CocoaPods ==="
          ls -la ios/Pods/ 2>/dev/null || echo "Pods –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          cat ios/Podfile.lock | head -20 2>/dev/null || echo "Podfile.lock –Ω–µ –Ω–∞–π–¥–µ–Ω"
          
          echo "=== Flutter –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ==="
          ls -la ios/Flutter/
          cat ios/Flutter/Generated.xcconfig 2>/dev/null || echo "Generated.xcconfig –Ω–µ –Ω–∞–π–¥–µ–Ω"
          
          echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–±–æ—Ä–∫–∏ ==="
          find . -name "*.log" -mtime -1 2>/dev/null | head -5 | xargs tail -50 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

      - name: Upload Flutter build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-logs
          path: |
            flutter_logs/
          retention-days: 7

      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-debug
          path: |
            ios/Pods/
            build/
            ios/Flutter/
            ios/Runner.xcodeproj/
            ios/Podfile*
            flutter_logs/
          retention-days: 7
