# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ Silent Fail –ø—Ä–∏ —Å–±–æ—Ä–∫–µ IPA
# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è Windows

param(
    [switch]$Verbose,
    [switch]$AlternativeMethods
)

Write-Host "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Silent Fail –ø—Ä–∏ —Å–±–æ—Ä–∫–µ IPA" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if (-not (Test-Path "pubspec.yaml")) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è Flutter –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
New-Item -ItemType Directory -Force -Path "logs\flutter" | Out-Null
New-Item -ItemType Directory -Force -Path "logs\system" | Out-Null
New-Item -ItemType Directory -Force -Path "logs\analysis" | Out-Null

Write-Host "`nüìä –≠—Ç–∞–ø 1: –°–∏—Å—Ç–µ–º–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
Write-Host "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:" -ForegroundColor Cyan
$disk = Get-WmiObject -Class Win32_LogicalDisk -Filter "DeviceID='C:'"
$freeSpaceGB = [math]::Round($disk.FreeSpace / 1GB, 2)
Write-Host "  –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: $freeSpaceGB GB" -ForegroundColor White

$memory = Get-WmiObject -Class Win32_ComputerSystem
$totalMemoryGB = [math]::Round($memory.TotalPhysicalMemory / 1GB, 2)
Write-Host "  –û–±—â–∞—è –ø–∞–º—è—Ç—å: $totalMemoryGB GB" -ForegroundColor White

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
Write-Host "`n–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:" -ForegroundColor Cyan
try {
    $flutterVersion = flutter --version 2>&1 | Select-String "Flutter" | Select-Object -First 1
    Write-Host "  Flutter: $flutterVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå Flutter –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

try {
    $dartVersion = dart --version 2>&1
    Write-Host "  Dart: $dartVersion" -ForegroundColor White
} catch {
    Write-Host "  ‚ùå Dart –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

Write-Host "`nüîç –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã iOS –ø—Ä–æ–µ–∫—Ç–∞
$iosChecks = @(
    @{Path="ios/Runner.xcodeproj/project.pbxproj"; Name="Xcode –ø—Ä–æ–µ–∫—Ç"},
    @{Path="ios/Runner/Info.plist"; Name="Info.plist"},
    @{Path="ios/Podfile"; Name="Podfile"},
    @{Path="ios/Pods"; Name="CocoaPods —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"},
    @{Path="ios/Flutter/Generated.xcconfig"; Name="Generated.xcconfig"}
)

foreach ($check in $iosChecks) {
    if (Test-Path $check.Path) {
        Write-Host "‚úÖ $($check.Name)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $($check.Name) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ bundle identifier
Write-Host "`n–ü—Ä–æ–≤–µ—Ä–∫–∞ bundle identifier:" -ForegroundColor Cyan
if (Test-Path "ios/Runner/Info.plist") {
    $infoPlist = Get-Content "ios/Runner/Info.plist" -Raw
    if ($infoPlist -match "PRODUCT_BUNDLE_IDENTIFIER") {
        Write-Host "‚úÖ Bundle identifier –Ω–∞—Å—Ç—Ä–æ–µ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Bundle identifier –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω" -ForegroundColor Yellow
    }
}

Write-Host "`nüî® –≠—Ç–∞–ø 3: –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π" -ForegroundColor Yellow

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Cyan
flutter clean | Out-Null
Remove-Item -Recurse -Force "build" -ErrorAction SilentlyContinue

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Cyan
flutter pub get | Out-Null

# –°–æ–∑–¥–∞–Ω–∏–µ unsigned –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Write-Host "–°–æ–∑–¥–∞–Ω–∏–µ unsigned –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Cyan
$unsignedConfig = @"
#include "Generated.xcconfig"
CODE_SIGN_IDENTITY=
CODE_SIGNING_REQUIRED=NO
CODE_SIGNING_ALLOWED=NO
PROVISIONING_PROFILE_SPECIFIER=
DEVELOPMENT_TEAM=
ENABLE_BITCODE=NO
SKIP_INSTALL=NO
"@

$unsignedConfig | Out-File -FilePath "ios/Flutter/Unsigned.xcconfig" -Encoding UTF8

# –ë—ç–∫–∞–ø –∏ –∑–∞–º–µ–Ω–∞ Release.xcconfig
if (Test-Path "ios/Flutter/Release.xcconfig") {
    Copy-Item "ios/Flutter/Release.xcconfig" "ios/Flutter/Release.xcconfig.backup"
}
Copy-Item "ios/Flutter/Unsigned.xcconfig" "ios/Flutter/Release.xcconfig"

Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫ flutter build ipa —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º..." -ForegroundColor Yellow

# –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—ã–≤–æ–¥–∞
$buildStartTime = Get-Date
Write-Host "–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∫–∏: $buildStartTime" -ForegroundColor Cyan

try {
    # –ó–∞–ø—É—Å–∫ —Å –∑–∞—Ö–≤–∞—Ç–æ–º stdout –∏ stderr
    $process = Start-Process -FilePath "flutter" -ArgumentList "build", "ipa", "--release", "--no-codesign", "--verbose" -RedirectStandardOutput "logs\flutter\stdout.log" -RedirectStandardError "logs\flutter\stderr.log" -Wait -PassThru -NoNewWindow
    
    $buildEndTime = Get-Date
    $buildDuration = $buildEndTime - $buildStartTime
    
    Write-Host "–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–±–æ—Ä–∫–∏: $buildEndTime" -ForegroundColor Cyan
    Write-Host "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–±–æ—Ä–∫–∏: $($buildDuration.TotalMinutes.ToString('F2')) –º–∏–Ω—É—Ç" -ForegroundColor Cyan
    Write-Host "Exit code: $($process.ExitCode)" -ForegroundColor Cyan
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    Write-Host "`nüîç –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å–±–æ—Ä–∫–∏..." -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
    Write-Host "–ü–æ–∏—Å–∫ IPA —Ñ–∞–π–ª–æ–≤:" -ForegroundColor Cyan
    $ipaFiles = Get-ChildItem -Path "." -Recurse -Filter "*.ipa" -ErrorAction SilentlyContinue
    
    if ($ipaFiles) {
        Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω—ã IPA —Ñ–∞–π–ª—ã:" -ForegroundColor Green
        foreach ($ipa in $ipaFiles) {
            $sizeMB = [math]::Round($ipa.Length / 1MB, 2)
            Write-Host "  üì± $($ipa.FullName) - $sizeMB MB" -ForegroundColor Cyan
        }
    } else {
        Write-Host "‚ùå IPA —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ app bundle
    Write-Host "`n–ü–æ–∏—Å–∫ app bundle:" -ForegroundColor Cyan
    $appBundles = Get-ChildItem -Path "build" -Recurse -Filter "*.app" -ErrorAction SilentlyContinue
    
    if ($appBundles) {
        Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω—ã app bundle:" -ForegroundColor Green
        foreach ($app in $appBundles) {
            Write-Host "  üì± $($app.FullName)" -ForegroundColor Cyan
        }
    } else {
        Write-Host "‚ùå App bundle –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Red
    }
    
    # –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤
    Write-Host "`nüìÑ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤..." -ForegroundColor Yellow
    
    if (Test-Path "logs\flutter\stdout.log") {
        $stdout = Get-Content "logs\flutter\stdout.log" -Raw
        
        # –ü–æ–∏—Å–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —É—Å–ø–µ—Ö–∞
        Write-Host "–ü–æ–∏—Å–∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —É—Å–ø–µ—Ö–∞:" -ForegroundColor Cyan
        if ($stdout -match "Built.*\.ipa") {
            Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏ IPA" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏ IPA –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
        }
        
        # –ü–æ–∏—Å–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
        $warnings = $stdout | Select-String -Pattern "warning|caution" -AllMatches
        if ($warnings) {
            Write-Host "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $($warnings.Count)" -ForegroundColor Yellow
            if ($Verbose) {
                $warnings | Select-Object -First 5 | ForEach-Object { Write-Host "  $_" -ForegroundColor Gray }
            }
        }
        
        if ($Verbose) {
            Write-Host "`n–ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ stdout:" -ForegroundColor Gray
            Get-Content "logs\flutter\stdout.log" | Select-Object -Last 20 | ForEach-Object { Write-Host "  $_" -ForegroundColor Gray }
        }
    }
    
    if (Test-Path "logs\flutter\stderr.log") {
        $stderr = Get-Content "logs\flutter\stderr.log" -Raw
        
        if ($stderr.Trim()) {
            Write-Host "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –≤ stderr:" -ForegroundColor Yellow
            if ($Verbose) {
                Write-Host $stderr -ForegroundColor Gray
            }
            
            # –ü–æ–∏—Å–∫ —Å–∫—Ä—ã—Ç—ã—Ö –æ—à–∏–±–æ–∫
            $errors = $stderr | Select-String -Pattern "error|fail|exception|abort" -AllMatches
            if ($errors) {
                Write-Host "‚ùå –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ stderr: $($errors.Count)" -ForegroundColor Red
                $errors | Select-Object -First 3 | ForEach-Object { Write-Host "  $_" -ForegroundColor Red }
            }
        } else {
            Write-Host "‚úÖ Stderr –ø—É—Å—Ç" -ForegroundColor Green
        }
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–±–æ—Ä–∫–∏: $_" -ForegroundColor Red
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–±–æ—Ä–∫–∏
if ($AlternativeMethods -and -not $ipaFiles) {
    Write-Host "`nüîÑ –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–±–æ—Ä–∫–∏..." -ForegroundColor Yellow
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if (Test-Path "ios/Flutter/Release.xcconfig.backup") {
        Copy-Item "ios/Flutter/Release.xcconfig.backup" "ios/Flutter/Release.xcconfig"
    }
    
    # –ú–µ—Ç–æ–¥: flutter build ios + —Ä—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ IPA
    Write-Host "–ú–µ—Ç–æ–¥: flutter build ios + —Ä—É—á–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ IPA" -ForegroundColor Cyan
    
    try {
        $process = Start-Process -FilePath "flutter" -ArgumentList "build", "ios", "--release", "--no-codesign" -RedirectStandardOutput "logs\flutter\build_ios_stdout.log" -RedirectStandardError "logs\flutter\build_ios_stderr.log" -Wait -PassThru -NoNewWindow
        
        if ($process.ExitCode -eq 0 -and (Test-Path "build/ios/iphoneos")) {
            Write-Host "‚úÖ Flutter build ios —É—Å–ø–µ—à–µ–Ω" -ForegroundColor Green
            
            # –ü–æ–∏—Å–∫ .app —Ñ–∞–π–ª–∞
            $appFile = Get-ChildItem -Path "build/ios/iphoneos" -Filter "*.app" -Directory | Select-Object -First 1
            
            if ($appFile) {
                Write-Host "–ù–∞–π–¥–µ–Ω app bundle: $($appFile.Name)" -ForegroundColor Cyan
                
                # –°–æ–∑–¥–∞–Ω–∏–µ IPA –≤—Ä—É—á–Ω—É—é
                New-Item -ItemType Directory -Force -Path "build/ios/ipa/Payload" | Out-Null
                Copy-Item -Recurse $appFile.FullName "build/ios/ipa/Payload/"
                
                # –°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞
                Set-Location "build/ios/ipa"
                
                if (Get-Command "7z" -ErrorAction SilentlyContinue) {
                    7z a -tzip "taste_smoke_ios.ipa" "Payload/*" | Out-Null
                } else {
                    Compress-Archive -Path "Payload/*" -DestinationPath "taste_smoke_ios.ipa" -Force
                }
                
                Set-Location "../../.."
                
                if (Test-Path "build/ios/ipa/taste_smoke_ios.ipa") {
                    $ipaSize = [math]::Round((Get-Item "build/ios/ipa/taste_smoke_ios.ipa").Length / 1MB, 2)
                    Write-Host "‚úÖ IPA —Å–æ–∑–¥–∞–Ω –≤—Ä—É—á–Ω—É—é: $ipaSize MB" -ForegroundColor Green
                } else {
                    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å IPA –≤—Ä—É—á–Ω—É—é" -ForegroundColor Red
                }
            } else {
                Write-Host "‚ùå App bundle –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
            }
        } else {
            Write-Host "‚ùå Flutter build ios –Ω–µ —É–¥–∞–ª—Å—è" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞: $_" -ForegroundColor Red
    }
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if (Test-Path "ios/Flutter/Release.xcconfig.backup") {
    Copy-Item "ios/Flutter/Release.xcconfig.backup" "ios/Flutter/Release.xcconfig"
    Remove-Item "ios/Flutter/Release.xcconfig.backup"
}

Write-Host "`nüìä –ò—Ç–æ–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:" -ForegroundColor Yellow

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ IPA
$finalIpaCheck = Get-ChildItem -Path "." -Recurse -Filter "*.ipa" -ErrorAction SilentlyContinue

if ($finalIpaCheck) {
    Write-Host "‚úÖ IPA —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã:" -ForegroundColor Green
    foreach ($ipa in $finalIpaCheck) {
        $sizeMB = [math]::Round($ipa.Length / 1MB, 2)
        Write-Host "  üì± $($ipa.FullName) - $sizeMB MB" -ForegroundColor Cyan
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ IPA (–µ—Å–ª–∏ –µ—Å—Ç—å 7z)
        if (Get-Command "7z" -ErrorAction SilentlyContinue) {
            $content = 7z l $ipa.FullName 2>$null | Select-String "Payload"
            if ($content) {
                Write-Host "    ‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É Payload" -ForegroundColor Green
            } else {
                Write-Host "    ‚ö†Ô∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ IPA –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π" -ForegroundColor Yellow
            }
        }
    }
    
    Write-Host "`nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    Write-Host "IPA –≥–æ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ AltStore" -ForegroundColor Green
} else {
    Write-Host "‚ùå IPA —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Red
    Write-Host "`nüîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã:" -ForegroundColor Yellow
    Write-Host "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –ø–∞–ø–∫–µ logs/" -ForegroundColor White
    Write-Host "2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ bundle identifier —É–Ω–∏–∫–∞–ª–µ–Ω" -ForegroundColor White
    Write-Host "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∏ –∫–æ–¥–∞" -ForegroundColor White
    Write-Host "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å —Ñ–ª–∞–≥–æ–º -AlternativeMethods" -ForegroundColor White
    Write-Host "5. –°–º. –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –≤ SILENT_FAIL_DIAGNOSIS.md" -ForegroundColor White
}

Write-Host "`nüìÅ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ logs/ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞" -ForegroundColor Cyan